"use client";
import Image from "next/image";
import { useState } from "react";
import { FaSearch } from "react-icons/fa";

const recomendaciones = [
  {
    titulo: "Cumbres Borrascosas",
    imagen: "/cumbresborroscosas.jpg",
    genero: "Drama",
    año: 1939,
    director: "William Wyler",
  },
  {
    titulo: "Orgullo y Prejuicio",
    imagen: "/orgulloyprejuicio.png",
    genero: "Romance",
    año: 2005,
    director: "Joe Wright",
  },
  {
    titulo: "Blade Runner",
    imagen: "/bladerunner.webp",
    genero: "Ciencia Ficción",
    año: 1982,
    director: "Ridley Scott",
  },
  {
    titulo: "El castillo vagabundo",
    imagen: "/castillovagabundo.jpg",
    genero: "Animación",
    año: 2004,
    director: "Hayao Miyazaki",
  },
  {
    titulo: "Mother",
    imagen: "/Mother.jpg",
    genero: "Suspenso",
    año: 2017,
    director: "Darren Aronofsky",
  },
  {
    titulo: "Dune 2",
    imagen: "/Dune 2.jpg",
    genero: "Ciencia Ficción",
    año: 2024,
    director: "Denis Villeneuve",
  },
  {
    titulo: "No Country for Old Men",
    imagen: "/No Country for Old Men.jpg",
    genero: "Crimen",
    año: 2007,
    director: "Joel Coen",
  },
  {
    titulo: "Vicky Cristina Barcelona",
    imagen: "/vicky.jpg",
    genero: "Comedia",
    año: 2008,
    director: "Woody Allen",
  },
  {
    titulo: "El Señor de los Anillos",
    imagen: "/lort.webp",
    genero: "Fantasía",
    año: 2001,
    director: "Peter Jackson",
  },
  {
    titulo: "Lilo y Stitch",
    imagen: "/lilo.jpg",
    genero: "Animación",
    año: 2002,
    director: "Dean DeBlois",
  },
  {
    titulo: "El Padrino",
    imagen: "/padrino.jpg",
    genero: "Drama",
    año: 1972,
    director: "Francis Ford Coppola",
  },
];

export default function RecomendacionesPage() {
  const [busqueda, setBusqueda] = useState("");
  const [filtro, setFiltro] = useState("todos");

  const filtrarPeliculas = () => {
    return recomendaciones.filter((peli) => {
      const coincideBusqueda = peli.titulo.toLowerCase().includes(busqueda.toLowerCase());

      if (filtro === "todos") return coincideBusqueda;
      if (filtro === "genero") return coincideBusqueda && peli.genero.toLowerCase().includes(busqueda.toLowerCase());
      if (filtro === "año") return coincideBusqueda && peli.año.toString().includes(busqueda);
      if (filtro === "director") return coincideBusqueda && peli.director.toLowerCase().includes(busqueda.toLowerCase());

      return coincideBusqueda;
    });
  };

  return (
    <main className="min-h-screen bg-gradient-to-b from-purple-900 to-black text-white px-4 sm:px-12 py-8">
      {/* Filtros y barra de búsqueda */}
      <div className="flex flex-col sm:flex-row justify-between items-center mb-10 gap-4">
        <div className="flex flex-wrap gap-4">
          <button onClick={() => setFiltro("todos")} className="bg-purple-800 hover:bg-purple-700 text-white px-4 py-2 rounded">
            TÍTULO
          </button>
          <button onClick={() => setFiltro("genero")} className="bg-purple-800 hover:bg-purple-700 text-white px-4 py-2 rounded">
            GÉNERO
          </button>
          <button onClick={() => setFiltro("año")} className="bg-purple-800 hover:bg-purple-700 text-white px-4 py-2 rounded">
            AÑO
          </button>
          <button onClick={() => setFiltro("director")} className="bg-purple-800 hover:bg-purple-700 text-white px-4 py-2 rounded">
            DIRECTOR
          </button>
        </div>
        <div className="flex items-center bg-white text-black px-4 py-2 rounded w-full sm:w-72">
          <input
            type="text"
            placeholder="Buscar..."
            className="w-full bg-transparent outline-none"
            value={busqueda}
            onChange={(e) => setBusqueda(e.target.value)}
          />
          <FaSearch className="text-purple-800 ml-2" />
        </div>
      </div>

      {/* Título */}
      <h2 className="text-2xl font-semibold mb-6 text-center">RECOMENDACIONES</h2>

      {/* Cuadrícula de películas */}
      <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-6">
        {filtrarPeliculas().map((peli, idx) => (
          <div key={idx} className="text-center">
            <Image
              src={peli.imagen}
              alt={peli.titulo}
              width={180}
              height={180}
              className="rounded-xl mx-auto shadow-md object-cover transition-transform duration-300 hover:scale-105"
            />
            <p className="mt-2 text-sm">{peli.titulo}</p>
          </div>
        ))}
      </div>

      {/* Footer */}
      <footer className="mt-16 text-center">
        <Image
          src="/logo-footer.png"
          alt="Logo CineConecta"
          width={120}
          height={120}
          className="mx-auto"
        />
      </footer>
    </main>
  );
}